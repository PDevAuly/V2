version: "3.9"

services:
  db:
    image: postgres:15
    container_name: pauly-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pauly2026!
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pauly-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PGHOST: db
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: pauly2026!
      PGDATABASE: postgres

      CORS_ORIGINS: http://localhost:3000
      PORT: 5000
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: pauly-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:80"   # Nginx servt auf :80 im Container, lokal dann http://localhost:3000

volumes:
  postgres-data:
