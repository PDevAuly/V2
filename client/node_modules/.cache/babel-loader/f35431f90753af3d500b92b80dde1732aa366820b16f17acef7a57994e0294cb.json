{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashraf\\\\projekt-pauly\\\\client\\\\src\\\\pages\\\\login.jsx\",\n  _s = $RefreshSig$();\n// src/pages/login.jsx\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [passwort, setPasswort] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // MFA-States\n  const [mfaRequired, setMfaRequired] = useState(false);\n  const [pendingUserId, setPendingUserId] = useState(null);\n  const [challengeId, setChallengeId] = useState(null); // optional, falls Backend so arbeitet\n  const [tempToken, setTempToken] = useState(null); // optional: z.B. mfaTempToken vom Login\n  const [mfaToken, setMfaToken] = useState('');\n  const parseJsonSafely = async res => {\n    try {\n      return await res.json();\n    } catch {\n      return {};\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      const res = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          email,\n          passwort\n        })\n      });\n      const data = await parseJsonSafely(res);\n      if (!res.ok) {\n        setError(data.error || `Login fehlgeschlagen (${res.status})`);\n        return;\n      }\n\n      // MFA verlangt?\n      if (data.status === 'MFA_REQUIRED' || data.mfaRequired === true) {\n        setMfaRequired(true);\n        setPendingUserId(data.user_id || data.userId || data.id || null);\n        setChallengeId(data.challengeId || data.mfa_challenge_id || null);\n        setTempToken(data.tempToken || data.mfaToken || null);\n        setMfaToken('');\n        return;\n      }\n\n      // Erfolgreich ohne MFA\n      if (data.accessToken) localStorage.setItem('accessToken', data.accessToken);\n      if (data.refreshToken) localStorage.setItem('refreshToken', data.refreshToken);\n      if (data.user) localStorage.setItem('userData', JSON.stringify(data.user));\n      onLoginSuccess === null || onLoginSuccess === void 0 ? void 0 : onLoginSuccess(data.user || null);\n    } catch {\n      setError('Serverfehler – bitte später erneut versuchen');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleVerifyMfa = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      // Falls Backend für die Verify-Route Auth braucht (temporär oder final):\n      const bearer = tempToken || localStorage.getItem('accessToken');\n      if (bearer) headers.Authorization = `Bearer ${bearer}`;\n      const res = await fetch('/api/auth/mfa/verify', {\n        method: 'POST',\n        headers,\n        credentials: 'include',\n        body: JSON.stringify({\n          user_id: pendingUserId,\n          token: mfaToken,\n          challenge_id: challengeId // harmless wenn Backend es ignoriert\n        })\n      });\n      const data = await parseJsonSafely(res);\n      if (!res.ok) {\n        setError(data.error || 'MFA-Code ungültig');\n        return;\n      }\n\n      // Erfolgreich mit MFA\n      if (data.accessToken) localStorage.setItem('accessToken', data.accessToken);\n      if (data.refreshToken) localStorage.setItem('refreshToken', data.refreshToken);\n      if (data.user) localStorage.setItem('userData', JSON.stringify(data.user));\n      onLoginSuccess === null || onLoginSuccess === void 0 ? void 0 : onLoginSuccess(data.user || null);\n    } catch {\n      setError('Serverfehler – bitte später erneut versuchen');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetToLogin = () => {\n    setMfaRequired(false);\n    setPendingUserId(null);\n    setChallengeId(null);\n    setTempToken(null);\n    setMfaToken('');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/pauly_logo4.png\",\n        alt: \"Pauly Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: !mfaRequired ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"con\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"head-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Anmelden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Bitte logge dich mit deiner E-Mail und deinem Passwort ein\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-set\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-input\",\n              type: \"email\",\n              placeholder: \"E-Mail\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-input\",\n              type: \"password\",\n              placeholder: \"Passwort\",\n              value: passwort,\n              onChange: e => setPasswort(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"log-in\",\n              disabled: loading,\n              children: loading ? 'Anmelden…' : 'Anmelden'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red',\n                marginTop: 10\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"other\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn submits frgt-pass\",\n              children: \"Passwort vergessen ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              className: \"btn submits sign-up\",\n              children: \"Registrieren\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleVerifyMfa,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"con\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"head-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"MFA best\\xE4tigen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Bitte den 6-stelligen Code aus deiner Authenticator-App eingeben.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-set\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-input\",\n              type: \"text\",\n              inputMode: \"numeric\",\n              maxLength: 6,\n              placeholder: \"123456\",\n              value: mfaToken,\n              onChange: e => setMfaToken(e.target.value.replace(/\\D/g, '')),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"log-in\",\n              disabled: loading || mfaToken.length !== 6,\n              children: loading ? 'Prüfe…' : 'Bestätigen'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn submits sign-up\",\n              onClick: resetToLogin,\n              style: {\n                marginTop: 10\n              },\n              disabled: loading,\n              children: \"\\u2190 Zur\\xFCck\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red',\n                marginTop: 10\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"WaYYAvtv6uE47XiCF1VzfuLMynU=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Login","onLoginSuccess","_s","email","setEmail","passwort","setPasswort","error","setError","loading","setLoading","mfaRequired","setMfaRequired","pendingUserId","setPendingUserId","challengeId","setChallengeId","tempToken","setTempToken","mfaToken","setMfaToken","parseJsonSafely","res","json","handleSubmit","e","preventDefault","fetch","method","headers","credentials","body","JSON","stringify","data","ok","status","user_id","userId","id","mfa_challenge_id","accessToken","localStorage","setItem","refreshToken","user","handleVerifyMfa","bearer","getItem","Authorization","token","challenge_id","resetToLogin","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","style","color","marginTop","to","inputMode","maxLength","replace","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ashraf/projekt-pauly/client/src/pages/login.jsx"],"sourcesContent":["// src/pages/login.jsx\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './login.css';\r\n\r\nconst Login = ({ onLoginSuccess }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [passwort, setPasswort] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // MFA-States\r\n  const [mfaRequired, setMfaRequired] = useState(false);\r\n  const [pendingUserId, setPendingUserId] = useState(null);\r\n  const [challengeId, setChallengeId] = useState(null); // optional, falls Backend so arbeitet\r\n  const [tempToken, setTempToken] = useState(null);     // optional: z.B. mfaTempToken vom Login\r\n  const [mfaToken, setMfaToken] = useState('');\r\n\r\n  const parseJsonSafely = async (res) => {\r\n    try {\r\n      return await res.json();\r\n    } catch {\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await fetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ email, passwort }),\r\n      });\r\n\r\n      const data = await parseJsonSafely(res);\r\n\r\n      if (!res.ok) {\r\n        setError(data.error || `Login fehlgeschlagen (${res.status})`);\r\n        return;\r\n      }\r\n\r\n      // MFA verlangt?\r\n      if (data.status === 'MFA_REQUIRED' || data.mfaRequired === true) {\r\n        setMfaRequired(true);\r\n        setPendingUserId(data.user_id || data.userId || data.id || null);\r\n        setChallengeId(data.challengeId || data.mfa_challenge_id || null);\r\n        setTempToken(data.tempToken || data.mfaToken || null);\r\n        setMfaToken('');\r\n        return;\r\n      }\r\n\r\n      // Erfolgreich ohne MFA\r\n      if (data.accessToken) localStorage.setItem('accessToken', data.accessToken);\r\n      if (data.refreshToken) localStorage.setItem('refreshToken', data.refreshToken);\r\n      if (data.user) localStorage.setItem('userData', JSON.stringify(data.user));\r\n\r\n      onLoginSuccess?.(data.user || null);\r\n    } catch {\r\n      setError('Serverfehler – bitte später erneut versuchen');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleVerifyMfa = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const headers = { 'Content-Type': 'application/json' };\r\n      // Falls Backend für die Verify-Route Auth braucht (temporär oder final):\r\n      const bearer = tempToken || localStorage.getItem('accessToken');\r\n      if (bearer) headers.Authorization = `Bearer ${bearer}`;\r\n\r\n      const res = await fetch('/api/auth/mfa/verify', {\r\n        method: 'POST',\r\n        headers,\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          user_id: pendingUserId,\r\n          token: mfaToken,\r\n          challenge_id: challengeId, // harmless wenn Backend es ignoriert\r\n        }),\r\n      });\r\n\r\n      const data = await parseJsonSafely(res);\r\n\r\n      if (!res.ok) {\r\n        setError(data.error || 'MFA-Code ungültig');\r\n        return;\r\n      }\r\n\r\n      // Erfolgreich mit MFA\r\n      if (data.accessToken) localStorage.setItem('accessToken', data.accessToken);\r\n      if (data.refreshToken) localStorage.setItem('refreshToken', data.refreshToken);\r\n      if (data.user) localStorage.setItem('userData', JSON.stringify(data.user));\r\n\r\n      onLoginSuccess?.(data.user || null);\r\n    } catch {\r\n      setError('Serverfehler – bitte später erneut versuchen');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetToLogin = () => {\r\n    setMfaRequired(false);\r\n    setPendingUserId(null);\r\n    setChallengeId(null);\r\n    setTempToken(null);\r\n    setMfaToken('');\r\n    setError('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <header className=\"logo\">\r\n        <img src=\"/pauly_logo4.png\" alt=\"Pauly Logo\" />\r\n      </header>\r\n\r\n      <div className=\"overlay\">\r\n        {!mfaRequired ? (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"con\">\r\n              <header className=\"head-form\">\r\n                <h2>Anmelden</h2>\r\n                <p>Bitte logge dich mit deiner E-Mail und deinem Passwort ein</p>\r\n              </header>\r\n\r\n              <div className=\"field-set\">\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-Mail\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"password\"\r\n                  placeholder=\"Passwort\"\r\n                  value={passwort}\r\n                  onChange={(e) => setPasswort(e.target.value)}\r\n                  required\r\n                />\r\n\r\n                <button type=\"submit\" className=\"log-in\" disabled={loading}>\r\n                  {loading ? 'Anmelden…' : 'Anmelden'}\r\n                </button>\r\n\r\n                {error && <p style={{ color: 'red', marginTop: 10 }}>{error}</p>}\r\n              </div>\r\n\r\n              <div className=\"other\">\r\n                <button type=\"button\" className=\"btn submits frgt-pass\">\r\n                  Passwort vergessen ?\r\n                </button>\r\n                <Link to=\"/register\" className=\"btn submits sign-up\">\r\n                  Registrieren\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          <form onSubmit={handleVerifyMfa}>\r\n            <div className=\"con\">\r\n              <header className=\"head-form\">\r\n                <h2>MFA bestätigen</h2>\r\n                <p>Bitte den 6-stelligen Code aus deiner Authenticator-App eingeben.</p>\r\n              </header>\r\n\r\n              <div className=\"field-set\">\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  inputMode=\"numeric\"\r\n                  maxLength={6}\r\n                  placeholder=\"123456\"\r\n                  value={mfaToken}\r\n                  onChange={(e) => setMfaToken(e.target.value.replace(/\\D/g, ''))}\r\n                  required\r\n                />\r\n\r\n                <button type=\"submit\" className=\"log-in\" disabled={loading || mfaToken.length !== 6}>\r\n                  {loading ? 'Prüfe…' : 'Bestätigen'}\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn submits sign-up\"\r\n                  onClick={resetToLogin}\r\n                  style={{ marginTop: 10 }}\r\n                  disabled={loading}\r\n                >\r\n                  ← Zurück\r\n                </button>\r\n\r\n                {error && <p style={{ color: 'red', marginTop: 10 }}>{error}</p>}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAK;EACtD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMyB,eAAe,GAAG,MAAOC,GAAG,IAAK;IACrC,IAAI;MACF,OAAO,MAAMA,GAAG,CAACC,IAAI,CAAC,CAAC;IACzB,CAAC,CAAC,MAAM;MACN,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBlB,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMY,GAAG,GAAG,MAAMK,KAAK,CAAC,iBAAiB,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE9B,KAAK;UAAEE;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAM6B,IAAI,GAAG,MAAMb,eAAe,CAACC,GAAG,CAAC;MAEvC,IAAI,CAACA,GAAG,CAACa,EAAE,EAAE;QACX3B,QAAQ,CAAC0B,IAAI,CAAC3B,KAAK,IAAI,yBAAyBe,GAAG,CAACc,MAAM,GAAG,CAAC;QAC9D;MACF;;MAEA;MACA,IAAIF,IAAI,CAACE,MAAM,KAAK,cAAc,IAAIF,IAAI,CAACvB,WAAW,KAAK,IAAI,EAAE;QAC/DC,cAAc,CAAC,IAAI,CAAC;QACpBE,gBAAgB,CAACoB,IAAI,CAACG,OAAO,IAAIH,IAAI,CAACI,MAAM,IAAIJ,IAAI,CAACK,EAAE,IAAI,IAAI,CAAC;QAChEvB,cAAc,CAACkB,IAAI,CAACnB,WAAW,IAAImB,IAAI,CAACM,gBAAgB,IAAI,IAAI,CAAC;QACjEtB,YAAY,CAACgB,IAAI,CAACjB,SAAS,IAAIiB,IAAI,CAACf,QAAQ,IAAI,IAAI,CAAC;QACrDC,WAAW,CAAC,EAAE,CAAC;QACf;MACF;;MAEA;MACA,IAAIc,IAAI,CAACO,WAAW,EAAEC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAET,IAAI,CAACO,WAAW,CAAC;MAC3E,IAAIP,IAAI,CAACU,YAAY,EAAEF,YAAY,CAACC,OAAO,CAAC,cAAc,EAAET,IAAI,CAACU,YAAY,CAAC;MAC9E,IAAIV,IAAI,CAACW,IAAI,EAAEH,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEX,IAAI,CAACC,SAAS,CAACC,IAAI,CAACW,IAAI,CAAC,CAAC;MAE1E5C,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAGiC,IAAI,CAACW,IAAI,IAAI,IAAI,CAAC;IACrC,CAAC,CAAC,MAAM;MACNrC,QAAQ,CAAC,8CAA8C,CAAC;IAC1D,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMoC,eAAe,GAAG,MAAOrB,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBlB,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMmB,OAAO,GAAG;QAAE,cAAc,EAAE;MAAmB,CAAC;MACtD;MACA,MAAMkB,MAAM,GAAG9B,SAAS,IAAIyB,YAAY,CAACM,OAAO,CAAC,aAAa,CAAC;MAC/D,IAAID,MAAM,EAAElB,OAAO,CAACoB,aAAa,GAAG,UAAUF,MAAM,EAAE;MAEtD,MAAMzB,GAAG,GAAG,MAAMK,KAAK,CAAC,sBAAsB,EAAE;QAC9CC,MAAM,EAAE,MAAM;QACdC,OAAO;QACPC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBI,OAAO,EAAExB,aAAa;UACtBqC,KAAK,EAAE/B,QAAQ;UACfgC,YAAY,EAAEpC,WAAW,CAAE;QAC7B,CAAC;MACH,CAAC,CAAC;MAEF,MAAMmB,IAAI,GAAG,MAAMb,eAAe,CAACC,GAAG,CAAC;MAEvC,IAAI,CAACA,GAAG,CAACa,EAAE,EAAE;QACX3B,QAAQ,CAAC0B,IAAI,CAAC3B,KAAK,IAAI,mBAAmB,CAAC;QAC3C;MACF;;MAEA;MACA,IAAI2B,IAAI,CAACO,WAAW,EAAEC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAET,IAAI,CAACO,WAAW,CAAC;MAC3E,IAAIP,IAAI,CAACU,YAAY,EAAEF,YAAY,CAACC,OAAO,CAAC,cAAc,EAAET,IAAI,CAACU,YAAY,CAAC;MAC9E,IAAIV,IAAI,CAACW,IAAI,EAAEH,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEX,IAAI,CAACC,SAAS,CAACC,IAAI,CAACW,IAAI,CAAC,CAAC;MAE1E5C,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAGiC,IAAI,CAACW,IAAI,IAAI,IAAI,CAAC;IACrC,CAAC,CAAC,MAAM;MACNrC,QAAQ,CAAC,8CAA8C,CAAC;IAC1D,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM0C,YAAY,GAAGA,CAAA,KAAM;IACzBxC,cAAc,CAAC,KAAK,CAAC;IACrBE,gBAAgB,CAAC,IAAI,CAAC;IACtBE,cAAc,CAAC,IAAI,CAAC;IACpBE,YAAY,CAAC,IAAI,CAAC;IAClBE,WAAW,CAAC,EAAE,CAAC;IACfZ,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACET,OAAA;IAAKsD,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBvD,OAAA;MAAQsD,SAAS,EAAC,MAAM;MAAAC,QAAA,eACtBvD,OAAA;QAAKwD,GAAG,EAAC,kBAAkB;QAACC,GAAG,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eAET7D,OAAA;MAAKsD,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrB,CAAC3C,WAAW,gBACXZ,OAAA;QAAM8D,QAAQ,EAAErC,YAAa;QAAA8B,QAAA,eAC3BvD,OAAA;UAAKsD,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAClBvD,OAAA;YAAQsD,SAAS,EAAC,WAAW;YAAAC,QAAA,gBAC3BvD,OAAA;cAAAuD,QAAA,EAAI;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjB7D,OAAA;cAAAuD,QAAA,EAAG;YAA0D;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC,eAET7D,OAAA;YAAKsD,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBvD,OAAA;cACEsD,SAAS,EAAC,YAAY;cACtBS,IAAI,EAAC,OAAO;cACZC,WAAW,EAAC,QAAQ;cACpBC,KAAK,EAAE7D,KAAM;cACb8D,QAAQ,EAAGxC,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACyC,MAAM,CAACF,KAAK,CAAE;cAC1CG,QAAQ;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACF7D,OAAA;cACEsD,SAAS,EAAC,YAAY;cACtBS,IAAI,EAAC,UAAU;cACfC,WAAW,EAAC,UAAU;cACtBC,KAAK,EAAE3D,QAAS;cAChB4D,QAAQ,EAAGxC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACyC,MAAM,CAACF,KAAK,CAAE;cAC7CG,QAAQ;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eAEF7D,OAAA;cAAQ+D,IAAI,EAAC,QAAQ;cAACT,SAAS,EAAC,QAAQ;cAACe,QAAQ,EAAE3D,OAAQ;cAAA6C,QAAA,EACxD7C,OAAO,GAAG,WAAW,GAAG;YAAU;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,EAERrD,KAAK,iBAAIR,OAAA;cAAGsE,KAAK,EAAE;gBAAEC,KAAK,EAAE,KAAK;gBAAEC,SAAS,EAAE;cAAG,CAAE;cAAAjB,QAAA,EAAE/C;YAAK;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,eAEN7D,OAAA;YAAKsD,SAAS,EAAC,OAAO;YAAAC,QAAA,gBACpBvD,OAAA;cAAQ+D,IAAI,EAAC,QAAQ;cAACT,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAExD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT7D,OAAA,CAACF,IAAI;cAAC2E,EAAE,EAAC,WAAW;cAACnB,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAC;YAErD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,gBAEP7D,OAAA;QAAM8D,QAAQ,EAAEf,eAAgB;QAAAQ,QAAA,eAC9BvD,OAAA;UAAKsD,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAClBvD,OAAA;YAAQsD,SAAS,EAAC,WAAW;YAAAC,QAAA,gBAC3BvD,OAAA;cAAAuD,QAAA,EAAI;YAAc;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvB7D,OAAA;cAAAuD,QAAA,EAAG;YAAiE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC,eAET7D,OAAA;YAAKsD,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBvD,OAAA;cACEsD,SAAS,EAAC,YAAY;cACtBS,IAAI,EAAC,MAAM;cACXW,SAAS,EAAC,SAAS;cACnBC,SAAS,EAAE,CAAE;cACbX,WAAW,EAAC,QAAQ;cACpBC,KAAK,EAAE7C,QAAS;cAChB8C,QAAQ,EAAGxC,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACyC,MAAM,CAACF,KAAK,CAACW,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAE;cAChER,QAAQ;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eAEF7D,OAAA;cAAQ+D,IAAI,EAAC,QAAQ;cAACT,SAAS,EAAC,QAAQ;cAACe,QAAQ,EAAE3D,OAAO,IAAIU,QAAQ,CAACyD,MAAM,KAAK,CAAE;cAAAtB,QAAA,EACjF7C,OAAO,GAAG,QAAQ,GAAG;YAAY;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC,eAET7D,OAAA;cACE+D,IAAI,EAAC,QAAQ;cACbT,SAAS,EAAC,qBAAqB;cAC/BwB,OAAO,EAAEzB,YAAa;cACtBiB,KAAK,EAAE;gBAAEE,SAAS,EAAE;cAAG,CAAE;cACzBH,QAAQ,EAAE3D,OAAQ;cAAA6C,QAAA,EACnB;YAED;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAERrD,KAAK,iBAAIR,OAAA;cAAGsE,KAAK,EAAE;gBAAEC,KAAK,EAAE,KAAK;gBAAEC,SAAS,EAAE;cAAG,CAAE;cAAAjB,QAAA,EAAE/C;YAAK;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1D,EAAA,CA/MIF,KAAK;AAAA8E,EAAA,GAAL9E,KAAK;AAiNX,eAAeA,KAAK;AAAC,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}